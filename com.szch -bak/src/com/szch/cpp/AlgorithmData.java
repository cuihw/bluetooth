package com.szch.cpp;

import android.util.Log;

public class AlgorithmData {

    private static final String TAG = "AlgorithmData";
    private static final int R_ANG_NUM = 31;
    private static final float MIN_RM = 20.0f;
    private static final float MAX_RM = 60.0f;
    private static final float R_SURF_NUM = 20.0f;
    private static final int CURVELINE = 201;

    /******************************************************
    函数：计算强度值
    参数：Modval：回弹值得平均值
          Cardepth：炭化深度平均值
          Pumpflag：泵送非泵送
          ht_jd0：角度修正
          ht_mian0：测试面修正
    返回值：修正后的推定值
    ***********************************************************/
    public static float getRegStrg(float Cardepth, float Modval, 
            boolean Pumpflag, int ht_jd0, int ht_mian0) {
        float fVal, fR2, fR, fCor, fR1, fC;

        int nC, i, nR;

        fVal = 0.F;
        fR = Modval;// GetAvarage();
        fR2 = getFloatRound(fR, 1);// 先四舍五入

        fCor = getAngleCor(fR2, ht_jd0);// 角度修正
        fR += fCor;

        fR2 = getFloatRound(fR, 1);// 四舍五入
        fCor = getSurfCor(fR2, ht_mian0);// 测试面修正
        fR += fCor;
        // ftoa(fR,1,str0);

        if (fR - MAX_RM > 0.00001F)// 如果大于60.0，表示推定值大于60.1
        {
            fVal = 60.1f;// MORE_THEN_SIXTY;
            return fVal;
        }
        if (fR < MIN_RM - 0.0001F) // 如果小余10.0，表示小余9.9
        {
            fVal = 9.9f;// LESS_THEN_TEN;
            return fVal;
        }
        if (!Pumpflag)// 表示非泵送
        {
            fC = Cardepth;
            // 根据平均碳化深度值求出列数
            nC = 0;
            for (i = 1; i <= 12; i++) {
                if (fC + 0.25 >= i * 0.5F)
                    nC++;
                else
                    break;
            }
            // 根据修正后的回弹值求出行数
            nR = 0;
            for (i = 1; i < CURVELINE - 1; i++) {
                if (fR >= MIN_RM + i * 0.2F)
                    nR++;
                else
                    break;
            }
            fR1 = MIN_RM + nR * 0.2F;
            // 查强度换算表，获取换算强度值
            if ((Data[nR][nC] < 0.00000001F) | ((Data[nR + 1][nC] < 0.00000001F)))// 强度换算表中的空值
            {
                if (fR < 24.0f)
                    fVal = 9.9f;// LESS_THEN_TEN;
                else
                    fVal = 60.1f;// MORE_THEN_SIXTY;
            } else {
                fVal = Data[nR][nC] + ((fR - fR1) / 0.2F) * (Data[nR + 1][nC] - (Data[nR][nC]));
            }
            fVal = getFloatRound(fVal, 1);
        } else// 泵送
        {
            if (fR - 52.8 > 0.00001F) {
                fVal = 60.1f;// MORE_THEN_SIXTY;
                return fVal;
            }
            if (fR < 18.6 - 0.0001F) {
                fVal = 9.9f;// LESS_THEN_TEN;
                return fVal;
            }
            fC = Cardepth;
            // 根据平均碳化深度值求出列数
            nC = 0;
            for (i = 1; i <= 12; i++) {
                if (fC + 0.25 >= i * 0.5F)
                    nC++;
                else
                    break;
            }
            // 根据修正后的回弹值求出行数
            nR = 0;
            for (i = 1; i < CURVELINE - 1; i++) {
                if (fR > 18.6 + i * 0.2F)
                    nR++;
                else
                    break;
            }
            fR1 = (float) (18.6 + nR * 0.2F);
            // 查强度换算表，获取换算强度值
            if ((bengsong[nR][nC] < 0.00000001F) | (bengsong[nR + 1][nC] < 0.00000001F))// 强度换算表中的空值
            {
                if (fR < 21.0f)
                    fVal = 9.9f;// LESS_THEN_TEN;
                else
                    fVal = 60.1f;// MORE_THEN_SIXTY;
            } else {
                fVal = bengsong[nR][nC] + ((fR - fR1) / 0.2F) * (bengsong[nR + 1][nC] - bengsong[nR][nC]);
            }
            fVal = getFloatRound(fVal, 1);
        }

        return fVal;
    }
    /******************************************************
     * 函数：四舍六入，奇进偶不进 参数：fVal：实数 bit0：有效位数 返回值：0
     ***********************************************************/
    public static float getFloatRound(float fVal, int bit0) {
        float val;
        int i;
        int nTmp;

        val = fVal;

        for (i = 0; i <= bit0; i++) {
            val = val * 10.F;            
        }

        String strValue = "" + val;

        String tmpLast = strValue.substring(strValue.length() - 1);

        Log.d(TAG, "Last bit is " + tmpLast);

        nTmp = Integer.parseInt(tmpLast);

        if (nTmp == 5) {
            tmpLast = strValue.substring(strValue.length() - 2, strValue.length() - 1);

            nTmp = Integer.parseInt(tmpLast);
            if (nTmp % 2 != 0) {
                val = (int) (Math.abs(val) + 5);   
            } else {
                val = (int) (Math.abs(val) - 5);                
            }

        } else if (nTmp < 5) {
            val = (int) (Math.abs(val) - nTmp);
        } else
            val = (int) (Math.abs(val) - nTmp + 10);

        if (fVal < 0)
            val = -val;

        for (i = 0; i <= bit0; i++)
            val = val / 10.F;
        return val;
    }

    /******************************************************
    函数：测强测试面修正插值
    参数：R:推定值
          nSurf：是侧面、表面、底面
    返回值：修正后的推定值
    ***********************************************************/
    public static float getSurfCor(float R, int surfaceIndex)
    {
        float fRCor;
        int i;
        if(R < MIN_RM)
            R = MIN_RM;
        else if(R > 50.F)
            R = 50.F;
        
        fRCor = 0.F;
        if(surfaceIndex > 2)
            return fRCor;

        for (i = 1; i < R_SURF_NUM; i++) {
            fRCor = TestSurfCor[i - 1][surfaceIndex]
                    + (R - fAveR[i - 1])
                    * (TestSurfCor[i][surfaceIndex] - TestSurfCor[i - 1][surfaceIndex])
                    / (fAveR[i] - fAveR[i - 1]);
        }

        fRCor = getFloatRound(fRCor, 1);
        // ftoa(fRCor,1,str0); //测试
        // for(i=0;i<5;i++)
        // send_uart(str0[i]);
        return fRCor;
    }

    /******************************************************
     * 函数：对推定值进行角度修正
     * 参数：R:推定值 iAng：角度对应在数组中的位置
     * 返回值：修正后的推定值
     ***********************************************************/

    public static float getAngleCor(float R, int iAng) {
        float fRCor;
        int i;

        if (R < MIN_RM) {
            R = MIN_RM;
        } else if (R > 50.F) {
            R = 50.F;
        }

        fRCor = 0.0F;

        for (i = 1; i < R_ANG_NUM; i++) {
            if (R == fAveR[i]) {
                fRCor = TestAngCor[i][iAng];
                break;
            } else if (R < fAveR[i]) {
                fRCor =
                        TestAngCor[i - 1][iAng] + (R - fAveR[i - 1]) * (TestAngCor[i][iAng] - TestAngCor[i - 1][iAng])
                                / (fAveR[i] - fAveR[i - 1]);
                break;
            }
        }
        fRCor = getFloatRound(fRCor, 1);
        return fRCor;
    }

    public static void sort(int[] pf, int n)// 排序
    {
        int i, j;
        int ft;
        for (i = 0; i < n; i++) {
            for (j = 0; j < n - 1; j++) {
                if (pf[j] < pf[j + 1]) {
                    ft = pf[j];
                    pf[j] = pf[j + 1];
                    pf[j + 1] = ft;
                }
            }
        }
    }

    public class HT_DATA {
        byte[] serial_num = new byte[4];
        byte reg_num;
        byte face;
        byte angle;
        byte bengsong;
        byte[] date = new byte[3];

        byte[] coal = new byte[10];
        byte[] ht_val = new byte[640];
        byte type;
        byte stone;
        int dis;
        int yita;
        int ramda;
        float aver_coal;
        float Fcu_min;
        float Fcu_aver;
        float Fcu_c;
        float Fcu_e;
    };

    public static float[] fAveR = {20.f, 21.0f, 22.0f, 23.0f, 24.0f, 25.0f, 26.0f, 27.0f, 28.0f, 29.0f, 30.f, 31.0f,
            32.0f, 33.0f, 34.0f, 35.0f, 36.0f, 37.0f, 38.0f, 39.0f, 40.f, 41.0f, 42.0f, 43.0f, 44.0f, 45.0f, 46.0f,
            47.0f, 48.0f, 49.0f, 50.f};

    public static float[][] TestSurfCor = { {2.5f, 0.f, -3.0f}, {2.4f, 0.f, -2.9f}, {2.3f, 0.f, -2.8f},
            {2.2f, 0.f, -2.7f}, {2.1f, 0.f, -2.6f}, {2.0f, 0.f, -2.5f}, {1.9f, 0.f, -2.4f}, {1.8f, 0.f, -2.3f},
            {1.7f, 0.f, -2.2f}, {1.6f, 0.f, -2.1f}, {1.5f, 0.f, -2.0f}, {1.4f, 0.f, -1.9f}, {1.3f, 0.f, -1.8f},
            {1.2f, 0.f, -1.7f}, {1.1f, 0.f, -1.6f}, {1.0f, 0.f, -1.5f}, {0.9f, 0.f, -1.4f}, {0.8f, 0.f, -1.3f},
            {0.7f, 0.f, -1.2f}, {0.6f, 0.f, -1.1f}, {0.5f, 0.f, -1.0f}, {0.4f, 0.f, -0.9f}, {0.3f, 0.f, -0.8f},
            {0.2f, 0.f, -0.7f}, {0.1f, 0.f, -0.6f}, {0.0f, 0.f, -0.5f}, {0.0f, 0.f, -0.4f}, {0.0f, 0.f, -0.3f},
            {0.0f, 0.f, -0.2f}, {0.0f, 0.f, -0.1f}, {0.0f, 0.f, 0.0f}

    };

    public static float[][] TestAngCor = { {-6.0f, -5.0f, -4.0f, -3.0f, 0.f, 2.5f, 3.0f, 3.5f, 4.0f},
            {-5.9f, -4.9f, -4.0f, -3.0f, 0.f, 2.5f, 3.0f, 3.5f, 4.0f},
            {-5.8f, -4.8f, -3.9f, -2.9f, 0.f, 2.4f, 2.9f, 3.4f, 3.9f},
            {-5.7f, -4.7f, -3.9f, -2.9f, 0.f, 2.4f, 2.9f, 3.4f, 3.9f},
            {-5.6f, -4.6f, -3.8f, -2.8f, 0.f, 2.3f, 2.8f, 3.3f, 3.8f},
            {-5.5f, -4.5f, -3.8f, -2.8f, 0.f, 2.3f, 2.8f, 3.3f, 3.8f},
            {-5.4f, -4.4f, -3.7f, -2.7f, 0.f, 2.2f, 2.7f, 3.2f, 3.7f},
            {-5.3f, -4.3f, -3.7f, -2.7f, 0.f, 2.2f, 2.7f, 3.2f, 3.7f},
            {-5.2f, -4.2f, -3.6f, -2.6f, 0.f, 2.1f, 2.6f, 3.1f, 3.6f},
            {-5.1f, -4.1f, -3.6f, -2.6f, 0.f, 2.1f, 2.6f, 3.1f, 3.6f},
            {-5.0f, -4.0f, -3.5f, -2.5f, 0.f, 2.0f, 2.5f, 3.0f, 3.5f},
            {-4.9f, -4.0f, -3.5f, -2.5f, 0.f, 2.0f, 2.5f, 3.0f, 3.5f},
            {-4.8f, -3.9f, -3.4f, -2.4f, 0.f, 1.9f, 2.4f, 2.9f, 3.4f},
            {-4.7f, -3.9f, -3.4f, -2.4f, 0.f, 1.9f, 2.4f, 2.9f, 3.4f},
            {-4.6f, -3.8f, -3.3f, -2.3f, 0.f, 1.8f, 2.3f, 2.8f, 3.3f},
            {-4.5f, -3.8f, -3.3f, -2.3f, 0.f, 1.8f, 2.3f, 2.8f, 3.3f},
            {-4.4f, -3.7f, -3.2f, -2.2f, 0.f, 1.7f, 2.2f, 2.7f, 3.2f},
            {-4.3f, -3.7f, -3.2f, -2.2f, 0.f, 1.7f, 2.2f, 2.7f, 3.2f},
            {-4.2f, -3.6f, -3.1f, -2.1f, 0.f, 1.6f, 2.1f, 2.6f, 3.1f},
            {-4.1f, -3.6f, -3.1f, -2.1f, 0.f, 1.6f, 2.1f, 2.6f, 3.1f},
            {-4.0f, -3.5f, -3.0f, -2.0f, 0.f, 1.5f, 2.0f, 2.5f, 3.0f},
            {-4.0f, -3.5f, -3.0f, -2.0f, 0.f, 1.5f, 2.0f, 2.5f, 3.0f},
            {-3.9f, -3.4f, -2.9f, -1.9f, 0.f, 1.4f, 1.9f, 2.4f, 2.9f},
            {-3.9f, -3.4f, -2.9f, -1.9f, 0.f, 1.4f, 1.9f, 2.4f, 2.9f},
            {-3.8f, -3.3f, -2.8f, -1.8f, 0.f, 1.3f, 1.8f, 2.3f, 2.8f},
            {-3.8f, -3.3f, -2.8f, -1.8f, 0.f, 1.3f, 1.8f, 2.3f, 2.8f},
            {-3.7f, -3.2f, -2.7f, -1.7f, 0.f, 1.2f, 1.7f, 2.2f, 2.7f},
            {-3.7f, -3.2f, -2.7f, -1.7f, 0.f, 1.2f, 1.7f, 2.2f, 2.7f},
            {-3.6f, -3.1f, -2.6f, -1.6f, 0.f, 1.1f, 1.6f, 2.1f, 2.6f},
            {-3.6f, -3.1f, -2.6f, -1.6f, 0.f, 1.1f, 1.6f, 2.1f, 2.6f},
            {-3.5f, -3.0f, -2.5f, -1.5f, 0.f, 1.0f, 1.5f, 2.0f, 2.5f}};

    public static float[][] Data = { {10.3f, 10.1f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {10.5f, 10.3f, 10.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {10.7f, 10.5f, 10.2f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {11.0f, 10.8f, 10.4f, 10.1f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {11.2f, 11.0f, 10.6f, 10.3f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {11.4f, 11.2f, 10.8f, 10.5f, 10.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {11.6f, 11.4f, 11.0f, 10.7f, 10.2f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {11.8f, 11.6f, 11.2f, 10.9f, 10.4f, 10.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {12.0f, 11.8f, 11.4f, 11.0f, 10.6f, 10.2f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {12.3f, 12.1f, 11.7f, 11.3f, 10.8f, 10.5f, 10.1f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {12.5f, 12.2f, 11.9f, 11.5f, 11.0f, 10.6f, 10.2f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {12.7f, 12.4f, 12.1f, 11.7f, 11.2f, 10.8f, 10.4f, 10.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {13.0f, 12.7f, 12.4f, 12.0f, 11.4f, 11.0f, 10.7f, 10.3f, 10.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {13.2f, 12.9f, 12.5f, 12.1f, 11.6f, 11.2f, 10.8f, 10.4f, 10.2f, 0.0f, 0.0f, 0.0f, 0.0f},
            {13.4f, 13.1f, 12.7f, 12.3f, 11.8f, 11.4f, 11.0f, 10.6f, 10.3f, 0.0f, 0.0f, 0.0f, 0.0f},
            {13.7f, 13.4f, 13.0f, 12.6f, 12.1f, 11.6f, 11.2f, 10.8f, 10.5f, 10.1f, 0.0f, 0.0f, 0.0f},
            {13.9f, 13.6f, 13.2f, 12.8f, 12.2f, 11.8f, 11.4f, 11.0f, 10.7f, 10.3f, 10.0f, 0.0f, 0.0f},
            {14.1f, 13.8f, 13.4f, 13.0f, 12.4f, 12.0f, 11.6f, 11.1f, 10.9f, 10.4f, 10.2f, 0.0f, 0.0f},
            {14.4f, 14.1f, 13.7f, 13.2f, 12.7f, 12.2f, 11.8f, 11.4f, 11.1f, 10.7f, 10.4f, 10.1f, 0.0f},
            {14.6f, 14.3f, 13.9f, 13.4f, 12.8f, 12.4f, 12.0f, 11.5f, 11.2f, 10.8f, 10.5f, 10.2f, 0.0f},
            {14.9f, 14.6f, 14.2f, 13.7f, 13.1f, 12.7f, 12.2f, 11.8f, 11.5f, 11.0f, 10.7f, 10.4f, 10.1f},
            {15.1f, 14.8f, 14.3f, 13.9f, 13.3f, 12.8f, 12.4f, 11.9f, 11.6f, 11.2f, 10.9f, 10.6f, 10.3f},
            {15.4f, 15.1f, 14.6f, 14.2f, 13.6f, 13.1f, 12.6f, 12.2f, 11.9f, 11.4f, 11.1f, 10.8f, 10.4f},
            {15.6f, 15.3f, 14.8f, 14.4f, 13.7f, 13.3f, 12.8f, 12.3f, 12.0f, 11.5f, 11.2f, 10.9f, 10.6f},
            {15.9f, 15.6f, 15.1f, 14.6f, 14.0f, 13.5f, 13.0f, 12.6f, 12.2f, 11.8f, 11.4f, 11.1f, 10.7f},
            {16.2f, 15.9f, 15.4f, 14.9f, 14.3f, 13.8f, 13.2f, 12.8f, 12.5f, 12.0f, 11.7f, 11.3f, 10.9f},
            {16.4f, 16.1f, 15.6f, 15.1f, 14.4f, 13.9f, 13.4f, 13.0f, 12.6f, 12.1f, 11.8f, 11.5f, 11.0f},
            {16.7f, 16.4f, 15.9f, 15.4f, 14.7f, 14.2f, 13.7f, 13.2f, 12.9f, 12.4f, 12.0f, 11.7f, 11.2f},
            {16.9f, 16.6f, 16.1f, 15.7f, 14.9f, 14.4f, 13.9f, 13.4f, 13.0f, 12.5f, 12.2f, 11.8f, 11.3f},
            {17.2f, 16.9f, 16.3f, 15.8f, 15.1f, 14.6f, 14.1f, 13.6f, 13.2f, 12.7f, 12.4f, 12.0f, 11.5f},
            {17.5f, 17.2f, 16.6f, 16.1f, 15.4f, 14.9f, 14.4f, 13.8f, 13.5f, 13.0f, 12.6f, 12.2f, 11.6f},
            {17.8f, 17.4f, 16.9f, 16.4f, 15.7f, 15.1f, 14.6f, 14.0f, 13.7f, 13.2f, 12.8f, 12.4f, 11.8f},
            {18.0f, 17.6f, 17.1f, 16.6f, 15.8f, 15.3f, 14.8f, 14.2f, 13.9f, 13.3f, 13.0f, 12.6f, 12.0f},
            {18.3f, 17.9f, 17.4f, 16.8f, 16.1f, 15.6f, 15.0f, 14.4f, 14.1f, 13.5f, 13.2f, 12.8f, 12.1f},
            {18.6f, 18.2f, 17.7f, 17.1f, 16.4f, 15.8f, 15.3f, 14.6f, 14.3f, 13.8f, 13.4f, 12.9f, 12.3f},
            {18.9f, 18.5f, 18.0f, 17.4f, 16.6f, 16.1f, 15.5f, 14.8f, 14.6f, 14.0f, 13.6f, 13.1f, 12.4f},
            {19.1f, 18.7f, 18.1f, 17.6f, 16.8f, 16.2f, 15.7f, 15.0f, 14.7f, 14.1f, 13.8f, 13.3f, 12.6f},
            {19.4f, 19.0f, 18.4f, 17.8f, 17.0f, 16.4f, 15.9f, 15.2f, 14.9f, 14.3f, 14.0f, 13.4f, 12.7f},
            {19.7f, 19.3f, 18.7f, 18.0f, 17.2f, 16.6f, 16.1f, 15.4f, 15.1f, 14.5f, 14.1f, 13.6f, 12.9f},
            {20.0f, 19.6f, 19.0f, 18.2f, 17.4f, 16.8f, 16.3f, 15.6f, 15.3f, 14.7f, 14.2f, 13.7f, 13.0f},
            {20.3f, 19.7f, 19.2f, 18.4f, 17.6f, 17.0f, 16.5f, 15.8f, 15.4f, 14.8f, 14.4f, 13.9f, 13.2f},
            {20.6f, 20.0f, 19.5f, 18.6f, 17.8f, 17.2f, 16.7f, 16.0f, 15.6f, 15.0f, 14.6f, 14.0f, 13.3f},
            {20.9f, 20.3f, 19.7f, 18.8f, 18.0f, 17.4f, 16.9f, 16.2f, 15.8f, 15.2f, 14.8f, 14.2f, 13.5f},
            {21.2f, 20.6f, 20.0f, 19.1f, 18.2f, 17.6f, 17.1f, 16.4f, 16.0f, 15.4f, 15.0f, 14.3f, 13.6f},
            {21.5f, 20.9f, 20.2f, 19.4f, 18.5f, 17.8f, 17.3f, 16.6f, 16.2f, 15.6f, 15.2f, 14.5f, 13.8f},
            {21.8f, 21.1f, 20.5f, 19.6f, 18.7f, 18.1f, 17.5f, 16.8f, 16.4f, 15.8f, 15.4f, 14.6f, 13.9f},
            {22.1f, 21.4f, 20.8f, 19.9f, 19.0f, 18.3f, 17.7f, 17.0f, 16.6f, 16.0f, 15.6f, 14.8f, 14.1f},
            {22.4f, 21.7f, 21.1f, 20.2f, 19.3f, 18.6f, 17.9f, 17.2f, 16.8f, 16.2f, 15.8f, 15.0f, 14.2f},
            {22.7f, 22.0f, 21.3f, 20.4f, 19.5f, 18.8f, 18.2f, 17.5f, 17.0f, 16.4f, 16.0f, 15.1f, 14.4f},
            {23.0f, 22.3f, 21.6f, 20.7f, 19.8f, 19.1f, 18.4f, 17.7f, 17.2f, 16.6f, 16.2f, 15.3f, 14.5f},
            {23.3f, 22.6f, 21.9f, 21.0f, 20.0f, 19.3f, 18.6f, 17.9f, 17.4f, 16.8f, 16.4f, 15.4f, 14.7f},
            {23.6f, 22.9f, 22.2f, 21.2f, 20.3f, 19.6f, 18.9f, 18.2f, 17.6f, 17.0f, 16.6f, 15.6f, 14.9f},
            {23.9f, 23.2f, 22.5f, 21.5f, 20.6f, 19.8f, 19.1f, 18.4f, 17.8f, 17.2f, 16.8f, 15.8f, 15.1f},
            {24.3f, 23.6f, 22.8f, 21.9f, 20.9f, 20.2f, 19.4f, 18.7f, 18.0f, 17.5f, 17.0f, 16.0f, 15.2f},
            {24.6f, 23.9f, 23.1f, 22.1f, 21.2f, 20.4f, 19.7f, 18.9f, 18.2f, 17.7f, 17.2f, 16.2f, 15.4f},
            {24.9f, 24.2f, 23.4f, 22.4f, 21.4f, 20.7f, 19.9f, 19.2f, 18.4f, 17.9f, 17.4f, 16.4f, 15.5f},
            {25.2f, 24.4f, 23.7f, 22.7f, 21.7f, 20.9f, 20.2f, 19.4f, 18.6f, 18.1f, 17.6f, 16.6f, 15.7f},
            {25.6f, 24.8f, 24.1f, 23.0f, 22.0f, 21.2f, 20.5f, 19.7f, 18.9f, 18.4f, 17.8f, 16.9f, 15.8f},
            {25.9f, 25.1f, 24.3f, 23.3f, 22.3f, 21.5f, 20.7f, 19.9f, 19.2f, 18.6f, 18.0f, 17.1f, 16.0f},
            {26.2f, 25.4f, 24.6f, 23.6f, 22.5f, 21.7f, 21.0f, 20.2f, 19.4f, 18.9f, 18.2f, 17.3f, 16.2f},
            {26.5f, 25.7f, 24.9f, 23.9f, 22.8f, 22.0f, 21.2f, 20.4f, 19.6f, 19.1f, 18.4f, 17.5f, 16.4f},
            {26.9f, 26.1f, 25.3f, 24.2f, 23.1f, 22.3f, 21.5f, 20.7f, 19.9f, 19.4f, 18.6f, 17.7f, 16.6f},
            {27.2f, 26.4f, 25.6f, 24.5f, 23.4f, 22.6f, 21.8f, 20.9f, 20.1f, 19.6f, 18.8f, 17.9f, 16.8f},
            {27.6f, 26.8f, 25.9f, 24.8f, 23.7f, 22.9f, 22.1f, 21.3f, 20.4f, 19.9f, 19.0f, 18.1f, 17.0f},
            {27.9f, 27.1f, 26.2f, 25.1f, 24.0f, 23.2f, 22.3f, 21.5f, 20.6f, 20.1f, 19.2f, 18.3f, 17.2f},
            {28.2f, 27.4f, 26.5f, 25.4f, 24.3f, 23.4f, 22.6f, 21.7f, 20.9f, 20.3f, 19.4f, 18.5f, 17.4f},
            {28.6f, 27.7f, 26.8f, 25.7f, 24.6f, 23.7f, 22.9f, 22.0f, 21.2f, 20.5f, 19.6f, 18.7f, 17.6f},
            {28.9f, 28.0f, 27.1f, 26.0f, 24.9f, 24.0f, 23.1f, 22.3f, 21.4f, 20.7f, 19.8f, 18.9f, 17.8f},
            {29.3f, 28.4f, 27.4f, 26.4f, 25.2f, 24.2f, 23.3f, 22.6f, 21.7f, 20.9f, 20.0f, 19.1f, 18.0f},
            {29.6f, 28.7f, 27.7f, 26.6f, 25.4f, 24.4f, 23.5f, 22.8f, 21.9f, 21.1f, 20.2f, 19.3f, 18.2f},
            {30.0f, 29.1f, 28.0f, 26.8f, 25.6f, 24.6f, 23.7f, 23.0f, 22.1f, 21.3f, 20.4f, 19.5f, 18.3f},
            {30.3f, 29.4f, 28.3f, 27.0f, 25.8f, 24.8f, 23.9f, 23.2f, 22.3f, 21.5f, 20.6f, 19.7f, 18.4f},
            {30.7f, 29.8f, 28.6f, 27.2f, 26.0f, 25.0f, 24.1f, 23.4f, 22.5f, 21.7f, 20.8f, 19.8f, 18.6f},
            {31.1f, 30.2f, 28.9f, 27.4f, 26.2f, 25.2f, 24.3f, 23.6f, 22.7f, 21.9f, 21.0f, 20.0f, 18.8f},
            {31.4f, 30.5f, 29.2f, 27.6f, 26.4f, 25.4f, 24.5f, 23.8f, 22.9f, 22.1f, 21.2f, 20.2f, 19.0f},
            {31.8f, 30.8f, 29.6f, 28.0f, 26.7f, 25.8f, 24.8f, 24.0f, 23.2f, 22.3f, 21.4f, 20.4f, 19.2f},
            {32.1f, 31.1f, 29.9f, 28.2f, 27.0f, 26.0f, 25.0f, 24.2f, 23.4f, 22.5f, 21.6f, 20.6f, 19.4f},
            {32.5f, 31.5f, 30.2f, 28.6f, 27.3f, 26.3f, 25.4f, 24.4f, 23.7f, 22.8f, 21.8f, 20.8f, 19.6f},
            {32.9f, 31.9f, 30.6f, 29.0f, 27.6f, 26.6f, 25.7f, 24.7f, 24.0f, 23.0f, 22.0f, 21.0f, 19.8f},
            {33.3f, 32.3f, 31.0f, 29.3f, 28.0f, 27.0f, 26.0f, 25.0f, 24.3f, 23.3f, 22.2f, 21.2f, 20.0f},
            {33.6f, 32.6f, 31.2f, 29.6f, 28.2f, 27.2f, 26.2f, 25.2f, 24.5f, 23.5f, 22.4f, 21.4f, 20.2f},
            {34.0f, 33.0f, 31.6f, 29.9f, 28.6f, 27.5f, 26.5f, 25.5f, 24.8f, 23.8f, 22.6f, 21.6f, 20.4f},
            {34.4f, 33.4f, 32.0f, 30.3f, 28.9f, 27.9f, 26.8f, 25.8f, 25.1f, 24.1f, 22.8f, 21.8f, 20.6f},
            {34.8f, 33.8f, 32.4f, 30.6f, 29.2f, 28.2f, 27.1f, 26.1f, 25.4f, 24.2f, 23.0f, 22.0f, 20.9f},
            {35.2f, 34.1f, 32.7f, 31.0f, 29.6f, 28.5f, 27.5f, 26.4f, 25.7f, 24.6f, 23.2f, 22.2f, 21.1f},
            {35.5f, 34.4f, 33.0f, 31.2f, 29.8f, 28.8f, 27.7f, 26.6f, 25.9f, 24.8f, 23.4f, 22.4f, 21.3f},
            {35.9f, 34.8f, 33.4f, 31.6f, 30.2f, 29.1f, 28.0f, 26.9f, 26.2f, 25.1f, 23.7f, 22.6f, 21.5f},
            {36.3f, 35.2f, 33.8f, 31.9f, 30.5f, 29.4f, 28.3f, 27.2f, 26.5f, 25.4f, 24.0f, 22.9f, 21.8f},
            {36.7f, 35.6f, 34.1f, 32.3f, 30.8f, 29.7f, 28.6f, 27.5f, 26.8f, 25.7f, 24.2f, 23.1f, 22.0f},
            {37.1f, 36.0f, 34.5f, 32.6f, 31.2f, 30.0f, 28.9f, 27.8f, 27.1f, 26.0f, 24.5f, 23.4f, 22.3f},
            {37.5f, 36.4f, 34.9f, 33.0f, 31.5f, 30.3f, 29.2f, 28.1f, 27.4f, 26.2f, 24.8f, 23.6f, 22.5f},
            {37.9f, 36.8f, 35.2f, 33.4f, 31.8f, 30.6f, 29.5f, 28.4f, 27.7f, 26.5f, 25.0f, 23.9f, 22.7f},
            {38.3f, 37.2f, 35.6f, 33.7f, 32.1f, 30.9f, 29.8f, 28.7f, 28.0f, 26.8f, 25.3f, 24.1f, 23.0f},
            {38.7f, 37.5f, 36.0f, 34.1f, 32.4f, 31.2f, 30.1f, 29.0f, 28.3f, 27.0f, 25.5f, 24.4f, 23.2f},
            {39.1f, 37.9f, 36.4f, 34.4f, 32.7f, 31.5f, 30.4f, 29.3f, 28.5f, 27.2f, 25.8f, 24.6f, 23.5f},
            {39.5f, 38.2f, 36.7f, 34.7f, 33.0f, 31.8f, 30.6f, 29.6f, 28.8f, 27.4f, 26.0f, 24.8f, 23.7f},
            {39.9f, 38.5f, 37.0f, 35.0f, 33.3f, 32.1f, 30.8f, 29.8f, 29.0f, 27.6f, 26.2f, 25.0f, 24.0f},
            {40.3f, 38.8f, 37.3f, 35.3f, 33.6f, 32.4f, 31.0f, 30.0f, 29.2f, 27.8f, 26.4f, 25.2f, 24.2f},
            {40.7f, 39.1f, 37.6f, 35.6f, 33.9f, 32.7f, 31.2f, 30.2f, 29.4f, 28.0f, 26.6f, 25.4f, 24.4f},
            {41.2f, 39.6f, 38.0f, 35.9f, 34.2f, 33.0f, 31.4f, 30.5f, 29.7f, 28.2f, 26.8f, 25.6f, 24.7f},
            {41.6f, 39.9f, 38.3f, 36.2f, 34.5f, 33.3f, 31.7f, 30.8f, 30.0f, 28.4f, 27.0f, 25.8f, 25.0f},
            {42.0f, 40.3f, 38.6f, 36.5f, 34.8f, 33.6f, 32.0f, 31.1f, 30.2f, 28.6f, 27.3f, 26.0f, 25.2f},
            {42.4f, 40.7f, 39.0f, 36.9f, 35.1f, 33.9f, 32.3f, 31.4f, 30.5f, 28.8f, 27.6f, 26.2f, 25.4f},
            {42.8f, 41.1f, 39.4f, 37.2f, 35.4f, 34.2f, 32.6f, 31.7f, 30.8f, 29.1f, 27.8f, 26.5f, 25.7f},
            {43.3f, 41.6f, 39.8f, 37.7f, 35.7f, 34.5f, 32.9f, 32.0f, 31.2f, 29.4f, 28.1f, 26.8f, 26.0f},
            {43.7f, 42.0f, 40.2f, 38.0f, 36.0f, 34.8f, 33.2f, 32.3f, 31.5f, 29.7f, 28.4f, 27.1f, 26.2f},
            {44.1f, 42.3f, 40.6f, 38.4f, 36.3f, 35.1f, 33.5f, 32.6f, 31.8f, 30.0f, 28.7f, 27.3f, 26.5f},
            {44.5f, 42.7f, 40.9f, 38.7f, 36.6f, 35.4f, 33.8f, 32.9f, 32.0f, 30.3f, 28.9f, 27.6f, 26.7f},
            {45.0f, 43.2f, 41.4f, 39.2f, 36.9f, 35.7f, 34.2f, 33.3f, 32.4f, 30.6f, 29.2f, 27.9f, 27.0f},
            {45.4f, 43.6f, 41.8f, 39.5f, 37.2f, 36.0f, 34.5f, 33.6f, 32.7f, 30.9f, 29.5f, 28.1f, 27.2f},
            {45.9f, 44.1f, 42.2f, 39.9f, 37.6f, 36.3f, 34.9f, 34.0f, 33.0f, 31.2f, 29.8f, 28.5f, 27.5f},
            {46.3f, 44.4f, 42.6f, 40.3f, 38.0f, 36.6f, 35.2f, 34.3f, 33.3f, 31.5f, 30.1f, 28.7f, 27.8f},
            {46.7f, 44.8f, 43.0f, 40.6f, 38.3f, 36.9f, 35.5f, 34.6f, 33.6f, 31.8f, 30.4f, 29.0f, 28.0f},
            {47.2f, 45.3f, 43.4f, 41.1f, 38.7f, 37.3f, 35.9f, 34.9f, 34.0f, 32.1f, 30.7f, 29.3f, 28.3f},
            {47.6f, 45.7f, 43.8f, 41.4f, 39.0f, 37.6f, 36.2f, 35.2f, 34.3f, 32.4f, 30.9f, 29.5f, 28.6f},
            {48.1f, 46.2f, 44.2f, 41.8f, 39.4f, 38.0f, 36.6f, 35.6f, 34.6f, 32.7f, 31.3f, 29.8f, 28.9f},
            {48.5f, 46.6f, 44.6f, 42.2f, 39.8f, 38.3f, 36.9f, 35.9f, 34.9f, 33.0f, 31.5f, 30.1f, 29.1f},
            {49.0f, 47.0f, 45.1f, 42.6f, 40.2f, 38.7f, 37.2f, 36.3f, 35.3f, 33.3f, 31.8f, 30.4f, 29.4f},
            {49.4f, 47.4f, 45.4f, 43.0f, 40.5f, 39.0f, 37.5f, 36.6f, 35.6f, 33.6f, 32.1f, 30.6f, 29.6f},
            {49.9f, 47.9f, 45.9f, 43.4f, 40.9f, 39.4f, 37.9f, 36.9f, 35.9f, 33.9f, 32.4f, 30.9f, 29.9f},
            {50.4f, 48.4f, 46.4f, 43.8f, 41.3f, 39.8f, 38.3f, 37.3f, 36.3f, 34.3f, 32.8f, 31.2f, 30.2f},
            {50.8f, 48.8f, 46.7f, 44.2f, 41.7f, 40.1f, 38.6f, 37.6f, 36.6f, 34.5f, 33.0f, 31.5f, 30.5f},
            {51.3f, 49.2f, 47.2f, 44.6f, 42.1f, 40.5f, 39.0f, 38.0f, 36.9f, 34.9f, 33.3f, 31.8f, 30.8f},
            {51.7f, 49.6f, 47.6f, 45.0f, 42.4f, 40.8f, 39.3f, 38.3f, 37.2f, 35.2f, 33.6f, 32.1f, 31.0f},
            {52.2f, 50.1f, 48.0f, 45.4f, 42.8f, 41.2f, 39.7f, 38.6f, 37.6f, 35.5f, 33.9f, 32.4f, 31.3f},
            {52.7f, 50.6f, 48.5f, 45.8f, 43.2f, 41.6f, 40.1f, 39.0f, 37.9f, 35.8f, 34.3f, 32.7f, 31.6f},
            {53.2f, 51.1f, 48.9f, 46.3f, 43.6f, 42.0f, 40.4f, 39.4f, 38.3f, 36.2f, 34.6f, 33.0f, 31.9f},
            {53.6f, 51.5f, 49.4f, 46.6f, 44.0f, 42.3f, 40.7f, 39.7f, 38.6f, 36.4f, 34.8f, 33.2f, 32.2f},
            {54.1f, 51.9f, 49.8f, 47.1f, 44.4f, 42.7f, 41.1f, 40.0f, 39.0f, 36.8f, 35.2f, 33.5f, 32.5f},
            {54.6f, 52.4f, 50.2f, 47.5f, 44.8f, 43.1f, 41.5f, 40.4f, 39.3f, 37.1f, 35.5f, 33.9f, 32.8f},
            {55.0f, 52.8f, 50.6f, 47.9f, 45.2f, 43.5f, 41.9f, 40.8f, 39.7f, 37.5f, 35.8f, 34.2f, 33.1f},
            {55.5f, 53.3f, 51.1f, 48.3f, 45.5f, 43.8f, 42.2f, 41.0f, 40.0f, 37.7f, 36.1f, 34.4f, 33.3f},
            {56.0f, 53.8f, 51.5f, 48.7f, 45.9f, 44.2f, 42.6f, 41.4f, 40.3f, 38.1f, 36.4f, 34.7f, 33.6f},
            {56.5f, 54.2f, 52.0f, 49.2f, 46.3f, 44.6f, 42.9f, 41.8f, 40.7f, 38.4f, 36.7f, 35.0f, 33.9f},
            {57.0f, 54.7f, 52.4f, 49.6f, 46.7f, 45.0f, 43.3f, 42.2f, 41.0f, 38.8f, 37.0f, 35.3f, 34.2f},
            {57.5f, 55.2f, 52.9f, 50.0f, 47.2f, 45.2f, 43.7f, 42.6f, 41.4f, 39.1f, 37.4f, 35.6f, 34.5f},
            {58.0f, 55.7f, 53.4f, 50.5f, 47.6f, 45.8f, 44.1f, 42.9f, 41.8f, 39.4f, 37.7f, 36.0f, 34.8f},
            {58.5f, 56.2f, 53.8f, 50.9f, 48.0f, 46.2f, 44.5f, 43.3f, 42.1f, 39.8f, 38.0f, 36.3f, 35.1f},
            {59.0f, 56.6f, 54.3f, 51.3f, 48.4f, 46.6f, 44.8f, 43.7f, 42.5f, 40.1f, 38.4f, 36.6f, 35.4f},
            {59.5f, 57.1f, 54.7f, 51.8f, 48.8f, 47.0f, 45.2f, 44.0f, 42.8f, 40.5f, 38.7f, 36.9f, 35.7f},
            {60.0f, 57.6f, 55.2f, 52.2f, 49.2f, 47.4f, 45.6f, 44.4f, 43.2f, 40.8f, 39.0f, 37.2f, 36.0f},
            {0.0f, 58.0f, 55.7f, 52.6f, 49.6f, 47.8f, 46.0f, 44.8f, 43.6f, 41.1f, 39.3f, 37.5f, 36.3f},
            {0.0f, 58.6f, 56.1f, 53.1f, 50.0f, 48.2f, 46.4f, 45.1f, 43.9f, 41.5f, 39.6f, 37.8f, 36.6f},
            {0.0f, 59.0f, 56.6f, 53.5f, 50.4f, 48.6f, 46.7f, 45.5f, 44.3f, 41.8f, 40.0f, 38.1f, 36.9f},
            {0.0f, 59.5f, 57.1f, 54.0f, 50.9f, 49.0f, 47.1f, 45.9f, 44.6f, 42.2f, 40.3f, 38.4f, 37.2f},
            {0.0f, 60.0f, 57.5f, 54.4f, 51.3f, 49.4f, 47.5f, 46.2f, 45.0f, 42.5f, 40.6f, 38.8f, 37.5f},
            {0.0f, 0.0f, 58.0f, 54.8f, 51.7f, 49.8f, 47.9f, 46.6f, 45.4f, 42.8f, 41.0f, 39.1f, 37.8f},
            {0.0f, 0.0f, 58.5f, 55.3f, 52.1f, 50.2f, 48.3f, 47.1f, 45.8f, 43.2f, 41.3f, 39.4f, 38.2f},
            {0.0f, 0.0f, 58.9f, 55.7f, 52.5f, 50.6f, 48.7f, 47.4f, 46.2f, 43.6f, 41.7f, 39.7f, 38.5f},
            {0.0f, 0.0f, 59.4f, 56.2f, 53.0f, 51.0f, 49.1f, 47.8f, 46.5f, 43.9f, 42.0f, 40.1f, 38.8f},
            {0.0f, 0.0f, 59.5f, 56.7f, 53.4f, 51.4f, 49.5f, 48.2f, 46.9f, 44.3f, 42.3f, 40.4f, 39.1f},
            {0.0f, 0.0f, 0.0f, 57.1f, 53.8f, 51.9f, 49.9f, 48.5f, 47.2f, 44.6f, 42.6f, 40.7f, 39.4f},
            {0.0f, 0.0f, 0.0f, 57.6f, 54.3f, 52.3f, 50.3f, 49.0f, 47.7f, 45.0f, 43.0f, 41.0f, 39.7f},
            {0.0f, 0.0f, 0.0f, 58.0f, 54.7f, 52.7f, 50.7f, 49.4f, 48.0f, 45.4f, 43.4f, 41.4f, 40.0f},
            {0.0f, 0.0f, 0.0f, 58.5f, 55.1f, 53.1f, 51.1f, 49.8f, 48.4f, 45.7f, 43.7f, 41.7f, 40.3f},
            {0.0f, 0.0f, 0.0f, 59.0f, 55.6f, 53.5f, 51.5f, 50.1f, 48.8f, 46.1f, 44.1f, 42.0f, 40.7f},
            {0.0f, 0.0f, 0.0f, 59.4f, 56.0f, 54.0f, 51.9f, 50.5f, 49.2f, 46.4f, 44.4f, 42.3f, 41.0f},
            {0.0f, 0.0f, 0.0f, 59.9f, 56.4f, 54.4f, 52.3f, 50.9f, 49.6f, 46.8f, 44.7f, 42.7f, 41.3f},
            {0.0f, 0.0f, 0.0f, 0.0f, 56.9f, 54.8f, 52.7f, 51.3f, 50.0f, 47.2f, 45.1f, 43.0f, 41.6f},
            {0.0f, 0.0f, 0.0f, 0.0f, 57.3f, 55.2f, 53.1f, 51.7f, 50.3f, 47.5f, 45.4f, 43.3f, 41.8f},
            {0.0f, 0.0f, 0.0f, 0.0f, 57.8f, 55.7f, 53.6f, 52.1f, 50.7f, 47.9f, 45.8f, 43.7f, 42.3f},
            {0.0f, 0.0f, 0.0f, 0.0f, 58.2f, 56.1f, 54.0f, 52.5f, 51.1f, 48.3f, 46.2f, 44.0f, 42.6f},
            {0.0f, 0.0f, 0.0f, 0.0f, 58.7f, 56.5f, 54.4f, 53.0f, 51.5f, 48.7f, 46.5f, 44.4f, 43.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 59.1f, 57.0f, 54.8f, 53.4f, 51.9f, 49.0f, 46.9f, 44.7f, 43.3f},
            {0.0f, 0.0f, 0.0f, 0.0f, 59.6f, 57.4f, 55.2f, 53.8f, 52.3f, 49.4f, 47.3f, 45.1f, 43.6f},
            {0.0f, 0.0f, 0.0f, 0.0f, 60.0f, 57.8f, 55.6f, 54.2f, 52.7f, 49.8f, 47.6f, 45.4f, 43.9f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 58.3f, 56.1f, 54.6f, 53.1f, 50.2f, 48.0f, 45.8f, 44.3f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 58.7f, 56.5f, 55.0f, 53.5f, 50.5f, 48.3f, 46.1f, 44.6f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.2f, 56.9f, 55.4f, 53.9f, 50.9f, 48.7f, 46.4f, 44.9f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.6f, 57.3f, 55.8f, 54.3f, 51.3f, 49.0f, 46.8f, 45.3f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 57.8f, 56.3f, 54.7f, 51.7f, 49.4f, 47.1f, 45.6f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 58.2f, 56.7f, 55.1f, 52.1f, 49.8f, 47.5f, 46.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 58.6f, 57.0f, 55.6f, 52.5f, 50.2f, 47.9f, 46.3f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.1f, 57.5f, 56.0f, 52.9f, 50.5f, 48.2f, 46.6f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.5f, 57.9f, 56.4f, 53.2f, 50.9f, 48.5f, 47.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.9f, 58.4f, 56.8f, 53.6f, 51.3f, 48.9f, 47.3f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 58.8f, 57.2f, 54.0f, 51.6f, 49.3f, 47.7f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.2f, 57.6f, 54.4f, 52.0f, 49.6f, 48.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.7f, 58.0f, 54.8f, 52.4f, 50.0f, 48.4f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 58.5f, 55.2f, 52.8f, 50.3f, 48.7f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 58.9f, 55.6f, 53.2f, 50.7f, 49.1f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.3f, 56.0f, 53.5f, 51.1f, 49.4f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.7f, 56.4f, 53.9f, 51.4f, 49.8f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 56.8f, 54.3f, 51.8f, 50.1f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 57.2f, 54.7f, 52.2f, 50.5f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 57.6f, 55.1f, 52.5f, 50.8f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 58.0f, 55.5f, 52.9f, 51.2f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 58.4f, 55.9f, 53.3f, 51.6f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 58.9f, 56.3f, 53.7f, 51.9f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.3f, 56.7f, 54.0f, 52.3f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.7f, 57.0f, 54.4f, 52.7f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 57.4f, 54.8f, 53.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 57.8f, 55.2f, 53.4f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 58.2f, 55.6f, 53.8f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 58.6f, 55.9f, 54.1f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.0f, 56.3f, 54.5f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.4f, 56.7f, 54.9f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.8f, 57.1f, 55.2f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 57.5f, 55.6f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 57.9f, 56.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 58.3f, 56.4f}};

    public static float[][] bengsong = {
            {10.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {10.2f, 10.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {10.4f, 10.2f, 10.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {10.6f, 10.4f, 10.2f, 10.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {10.9f, 10.7f, 10.4f, 10.2f, 10.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {11.1f, 10.9f, 10.6f, 10.4f, 10.2f, 10.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {11.3f, 11.1f, 10.9f, 10.6f, 10.4f, 10.2f, 10.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {11.5f, 11.3f, 11.1f, 10.9f, 10.6f, 10.4f, 10.2f, 10.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {11.8f, 11.5f, 11.3f, 11.1f, 10.9f, 10.6f, 10.4f, 10.2f, 10.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {12.0f, 11.7f, 11.5f, 11.3f, 11.1f, 10.8f, 10.6f, 10.4f, 10.2f, 10.0f, 0.0f, 0.0f, 0.0f},
            {12.2f, 12.0f, 11.7f, 11.5f, 11.3f, 11.0f, 10.8f, 10.6f, 10.4f, 10.2f, 10.0f, 0.0f, 0.0f},
            {12.4f, 12.2f, 12.0f, 11.7f, 11.5f, 11.3f, 11.0f, 10.8f, 10.6f, 10.4f, 10.2f, 10.0f, 0.0f},
            {12.7f, 12.4f, 12.2f, 11.9f, 11.7f, 11.5f, 11.2f, 11.0f, 10.8f, 10.6f, 10.4f, 10.2f, 10.0f},
            {12.9f, 12.7f, 12.4f, 12.2f, 11.9f, 11.7f, 11.5f, 11.2f, 11.0f, 10.8f, 10.6f, 10.4f, 10.2f},
            {13.1f, 12.9f, 12.6f, 12.4f, 12.1f, 11.9f, 11.7f, 11.4f, 11.2f, 11.0f, 10.8f, 10.6f, 10.3f},
            {13.4f, 13.1f, 12.9f, 12.6f, 12.4f, 12.1f, 11.9f, 11.6f, 11.4f, 11.2f, 11.0f, 10.7f, 10.5f},
            {13.6f, 13.4f, 13.1f, 12.8f, 12.6f, 12.3f, 12.1f, 11.9f, 11.6f, 11.4f, 11.2f, 10.9f, 10.7f},
            {13.9f, 13.6f, 13.3f, 13.1f, 12.8f, 12.6f, 12.3f, 12.1f, 11.8f, 11.6f, 11.4f, 11.1f, 10.9f},
            {14.1f, 13.8f, 13.6f, 13.3f, 13.0f, 12.8f, 12.5f, 12.3f, 12.0f, 11.8f, 11.6f, 11.3f, 11.1f},
            {14.4f, 14.1f, 13.8f, 13.5f, 13.3f, 13.0f, 12.7f, 12.5f, 12.2f, 12.0f, 11.8f, 11.5f, 11.3f},
            {14.6f, 14.3f, 14.0f, 13.8f, 13.5f, 13.2f, 13.0f, 12.7f, 12.5f, 12.2f, 12.0f, 11.7f, 11.5f},
            {14.9f, 14.6f, 14.3f, 14.0f, 13.7f, 13.5f, 13.2f, 12.9f, 12.7f, 12.4f, 12.2f, 11.9f, 11.7f},
            {15.1f, 14.8f, 14.5f, 14.2f, 14.0f, 13.7f, 13.4f, 13.1f, 12.9f, 12.6f, 12.4f, 12.1f, 11.7f},
            {15.4f, 15.1f, 14.8f, 14.5f, 14.2f, 13.9f, 13.6f, 13.4f, 13.1f, 12.8f, 12.6f, 12.3f, 12.1f},
            {15.6f, 15.3f, 15.0f, 14.7f, 14.4f, 14.1f, 13.9f, 13.6f, 13.3f, 13.1f, 12.8f, 12.6f, 12.3f},
            {15.9f, 15.6f, 15.3f, 15.0f, 14.7f, 14.4f, 14.1f, 13.8f, 13.5f, 13.3f, 13.0f, 12.8f, 12.5f},
            {16.2f, 15.8f, 15.5f, 15.2f, 14.9f, 14.6f, 14.3f, 14.1f, 13.8f, 13.5f, 13.2f, 13.0f, 12.7f},
            {16.4f, 16.1f, 15.8f, 15.5f, 15.2f, 14.9f, 14.6f, 14.3f, 14.0f, 13.7f, 13.5f, 13.2f, 12.9f},
            {16.7f, 16.4f, 16.0f, 15.7f, 15.4f, 15.1f, 14.8f, 14.5f, 14.2f, 13.9f, 13.7f, 13.4f, 13.1f},
            {17.0f, 16.6f, 16.3f, 16.0f, 15.7f, 15.3f, 15.0f, 14.7f, 14.5f, 14.2f, 13.9f, 13.6f, 13.3f},
            {17.2f, 16.9f, 16.5f, 16.2f, 15.9f, 15.6f, 15.3f, 15.0f, 14.7f, 14.4f, 14.1f, 13.8f, 13.6f},
            {17.5f, 17.1f, 16.8f, 16.5f, 16.2f, 15.8f, 15.5f, 15.2f, 14.9f, 14.6f, 14.3f, 14.1f, 13.8f},
            {17.8f, 17.4f, 17.1f, 16.7f, 16.4f, 16.1f, 15.8f, 15.5f, 15.2f, 14.9f, 14.6f, 14.3f, 14.0f},
            {18.0f, 17.7f, 17.3f, 17.0f, 16.7f, 16.3f, 16.0f, 15.7f, 15.4f, 15.1f, 14.8f, 14.5f, 14.2f},
            {18.3f, 18.0f, 17.6f, 17.3f, 16.9f, 16.6f, 16.3f, 15.9f, 15.6f, 15.3f, 15.0f, 14.7f, 14.4f},
            {18.6f, 18.2f, 17.9f, 17.5f, 17.2f, 16.8f, 16.5f, 16.2f, 15.9f, 15.6f, 15.2f, 14.9f, 14.7f},
            {18.9f, 18.5f, 18.2f, 17.8f, 17.4f, 17.1f, 16.8f, 16.4f, 16.1f, 15.8f, 15.5f, 15.2f, 14.9f},
            {19.2f, 18.8f, 18.4f, 18.1f, 17.7f, 17.4f, 17.0f, 16.7f, 16.3f, 16.0f, 15.7f, 15.4f, 15.1f},
            {19.5f, 19.1f, 18.7f, 18.3f, 18.0f, 17.6f, 17.3f, 16.9f, 16.6f, 16.3f, 15.9f, 15.6f, 15.3f},
            {19.8f, 19.4f, 19.0f, 18.6f, 18.2f, 17.9f, 17.5f, 17.2f, 16.8f, 16.5f, 16.2f, 15.9f, 15.6f},
            {20.0f, 19.6f, 19.3f, 18.9f, 18.5f, 18.1f, 17.8f, 17.4f, 17.1f, 16.8f, 16.4f, 16.1f, 15.8f},
            {20.3f, 19.9f, 19.5f, 19.2f, 18.8f, 18.4f, 18.0f, 17.7f, 17.3f, 17.0f, 16.7f, 16.3f, 16.0f},
            {20.6f, 20.2f, 19.8f, 19.4f, 19.1f, 18.7f, 18.3f, 17.9f, 17.6f, 17.2f, 16.9f, 16.6f, 16.2f},
            {20.9f, 20.5f, 20.1f, 19.7f, 19.3f, 18.9f, 18.6f, 18.2f, 17.8f, 17.5f, 17.1f, 16.8f, 16.5f},
            {21.2f, 20.8f, 20.4f, 20.0f, 19.6f, 19.2f, 18.8f, 18.5f, 18.1f, 17.7f, 17.4f, 17.1f, 16.7f},
            {21.5f, 21.1f, 20.7f, 20.3f, 19.9f, 19.5f, 19.1f, 18.7f, 18.4f, 18.0f, 17.6f, 17.3f, 17.0f},
            {21.8f, 21.4f, 21.0f, 20.6f, 20.2f, 19.8f, 19.4f, 19.0f, 18.6f, 18.3f, 17.9f, 17.5f, 17.2f},
            {22.1f, 21.7f, 21.3f, 20.9f, 20.4f, 20.0f, 19.6f, 19.3f, 18.9f, 18.5f, 18.1f, 17.8f, 17.4f},
            {22.4f, 22.0f, 21.6f, 21.1f, 20.7f, 20.3f, 19.9f, 19.5f, 19.1f, 18.8f, 18.4f, 18.0f, 17.7f},
            {22.8f, 22.3f, 21.9f, 21.4f, 21.0f, 20.6f, 20.2f, 19.8f, 19.4f, 19.0f, 18.6f, 18.3f, 17.9f},
            {23.1f, 22.6f, 22.2f, 21.7f, 21.3f, 20.9f, 20.5f, 20.1f, 19.7f, 19.3f, 18.9f, 18.5f, 18.2f},
            {23.4f, 22.9f, 22.5f, 22.0f, 21.6f, 21.2f, 20.7f, 20.3f, 19.9f, 19.5f, 19.2f, 18.8f, 18.4f},
            {23.7f, 23.2f, 22.8f, 22.3f, 21.9f, 21.5f, 21.0f, 20.6f, 20.2f, 19.8f, 19.4f, 19.0f, 18.7f},
            {24.0f, 23.5f, 23.1f, 22.6f, 22.2f, 21.7f, 21.3f, 20.9f, 20.5f, 20.1f, 19.7f, 19.3f, 18.9f},
            {24.3f, 23.9f, 23.4f, 22.9f, 22.5f, 22.0f, 21.6f, 21.2f, 20.8f, 20.3f, 19.9f, 19.5f, 19.2f},
            {24.7f, 24.2f, 23.7f, 23.2f, 22.8f, 22.3f, 21.9f, 21.4f, 21.0f, 20.6f, 20.2f, 19.8f, 19.4f},
            {25.0f, 24.5f, 24.0f, 23.5f, 23.1f, 22.6f, 22.2f, 21.7f, 21.3f, 20.9f, 20.5f, 20.1f, 19.7f},
            {25.3f, 24.8f, 24.3f, 23.8f, 23.4f, 22.9f, 22.5f, 22.0f, 21.6f, 21.2f, 20.7f, 20.3f, 19.9f},
            {25.6f, 25.1f, 24.6f, 24.2f, 23.7f, 23.2f, 22.8f, 22.3f, 21.9f, 21.4f, 21.0f, 20.6f, 20.2f},
            {26.0f, 25.5f, 25.0f, 24.5f, 24.0f, 23.5f, 23.0f, 22.6f, 22.1f, 21.7f, 21.3f, 20.9f, 20.4f},
            {26.3f, 25.8f, 25.3f, 24.8f, 24.3f, 23.8f, 23.3f, 22.9f, 22.4f, 22.0f, 21.6f, 21.1f, 20.7f},
            {26.6f, 26.1f, 25.6f, 25.1f, 24.6f, 24.1f, 23.6f, 23.2f, 22.7f, 22.3f, 21.8f, 21.4f, 21.0f},
            {27.0f, 26.4f, 25.9f, 25.4f, 24.9f, 24.4f, 23.9f, 23.5f, 23.0f, 22.5f, 22.1f, 21.7f, 21.2f},
            {27.3f, 26.8f, 26.2f, 25.7f, 25.2f, 24.7f, 24.2f, 23.8f, 23.3f, 22.8f, 22.4f, 21.9f, 21.5f},
            {27.7f, 27.1f, 26.6f, 26.0f, 25.5f, 25.0f, 24.5f, 24.1f, 23.6f, 23.1f, 22.7f, 22.2f, 21.8f},
            {28.0f, 27.4f, 26.9f, 26.4f, 25.9f, 25.3f, 24.8f, 24.4f, 23.9f, 23.4f, 22.9f, 22.5f, 22.0f},
            {28.3f, 27.8f, 27.2f, 26.7f, 26.2f, 25.7f, 25.1f, 24.7f, 24.2f, 23.7f, 23.2f, 22.8f, 22.3f},
            {28.7f, 28.1f, 27.6f, 27.0f, 26.5f, 26.0f, 25.5f, 25.0f, 24.5f, 24.0f, 23.5f, 23.0f, 22.6f},
            {29.0f, 28.5f, 27.9f, 27.4f, 26.8f, 26.3f, 25.8f, 25.3f, 24.8f, 24.3f, 23.8f, 23.3f, 22.9f},
            {29.4f, 28.8f, 28.2f, 27.7f, 27.1f, 26.6f, 26.1f, 25.6f, 25.1f, 24.6f, 24.1f, 23.6f, 23.1f},
            {29.7f, 29.2f, 28.6f, 28.0f, 27.5f, 26.9f, 26.4f, 25.9f, 25.4f, 24.9f, 24.4f, 23.9f, 23.4f},
            {30.1f, 29.5f, 28.9f, 28.3f, 27.8f, 27.2f, 26.7f, 26.2f, 25.7f, 25.2f, 24.7f, 24.2f, 23.7f},
            {30.4f, 29.8f, 29.3f, 28.7f, 28.1f, 27.6f, 27.0f, 26.5f, 26.0f, 25.5f, 25.0f, 24.5f, 24.0f},
            {30.8f, 30.2f, 29.6f, 29.0f, 28.4f, 27.9f, 27.3f, 26.8f, 26.3f, 25.8f, 25.2f, 24.7f, 24.3f},
            {30.2f, 30.6f, 30.0f, 29.4f, 28.8f, 28.2f, 27.7f, 27.1f, 26.6f, 26.1f, 25.5f, 25.0f, 24.5f},
            {31.5f, 30.9f, 30.3f, 29.7f, 29.1f, 28.5f, 28.0f, 27.4f, 26.9f, 26.4f, 25.8f, 25.3f, 24.8f},
            {31.9f, 31.3f, 30.7f, 30.0f, 29.5f, 28.9f, 28.3f, 27.7f, 27.2f, 26.7f, 26.1f, 25.6f, 25.1f},
            {32.3f, 31.6f, 31.0f, 30.4f, 29.8f, 29.2f, 28.6f, 28.1f, 27.5f, 27.0f, 26.4f, 25.9f, 25.4f},
            {32.6f, 32.0f, 31.4f, 30.7f, 30.1f, 29.5f, 29.0f, 28.4f, 27.8f, 27.3f, 26.7f, 26.2f, 25.7f},
            {33.0f, 32.4f, 31.7f, 31.1f, 30.5f, 29.9f, 29.3f, 28.7f, 28.1f, 27.3f, 27.0f, 26.5f, 26.0f},
            {33.4f, 32.7f, 32.1f, 31.4f, 30.8f, 30.2f, 29.6f, 29.0f, 28.5f, 27.9f, 27.4f, 26.8f, 26.3f},
            {33.8f, 33.1f, 32.4f, 31.8f, 31.2f, 30.6f, 30.0f, 29.4f, 28.8f, 28.2f, 27.7f, 27.1f, 26.6f},
            {34.1f, 33.5f, 32.8f, 32.2f, 31.5f, 30.9f, 30.3f, 29.7f, 29.1f, 28.5f, 28.0f, 27.4f, 26.9f},
            {34.5f, 33.8f, 33.2f, 32.5f, 31.9f, 31.2f, 30.6f, 30.0f, 29.4f, 28.8f, 28.3f, 27.7f, 27.2f},
            {34.9f, 34.2f, 33.5f, 32.9f, 32.2f, 31.6f, 31.0f, 30.4f, 29.8f, 29.2f, 28.6f, 28.0f, 27.5f},
            {35.3f, 34.6f, 33.9f, 33.2f, 32.6f, 31.9f, 31.3f, 30.7f, 30.1f, 29.5f, 28.9f, 28.3f, 27.8f},
            {35.7f, 35.0f, 34.3f, 33.6f, 32.9f, 32.3f, 31.6f, 31.0f, 30.4f, 29.8f, 29.2f, 28.6f, 28.1f},
            {36.0f, 35.3f, 34.6f, 34.0f, 33.3f, 32.6f, 32.0f, 31.4f, 30.7f, 30.1f, 29.5f, 29.0f, 28.4f},
            {36.4f, 35.7f, 35.0f, 34.3f, 33.6f, 33.0f, 32.3f, 31.7f, 31.1f, 30.5f, 29.9f, 29.3f, 28.7f},
            {36.8f, 36.1f, 35.4f, 34.7f, 34.0f, 33.3f, 32.7f, 32.0f, 31.4f, 30.8f, 30.2f, 29.6f, 29.0f},
            {37.2f, 36.5f, 35.8f, 35.1f, 34.4f, 33.7f, 33.0f, 32.4f, 31.7f, 31.1f, 30.5f, 29.9f, 29.3f},
            {37.6f, 36.9f, 36.2f, 35.4f, 34.7f, 34.1f, 33.4f, 32.7f, 32.1f, 31.4f, 30.8f, 30.2f, 29.6f},
            {38.0f, 37.3f, 36.5f, 35.8f, 35.1f, 34.4f, 33.7f, 33.1f, 32.4f, 31.8f, 31.2f, 30.5f, 29.9f},
            {38.4f, 37.7f, 36.9f, 36.2f, 35.5f, 34.8f, 34.1f, 33.4f, 32.8f, 32.1f, 31.5f, 30.9f, 30.2f},
            {38.8f, 38.1f, 37.3f, 36.6f, 35.8f, 35.1f, 34.4f, 33.8f, 33.1f, 32.4f, 31.8f, 31.2f, 30.6f},
            {39.2f, 38.4f, 37.7f, 36.9f, 36.2f, 35.5f, 34.8f, 34.1f, 33.4f, 32.8f, 32.1f, 31.5f, 30.9f},
            {39.6f, 38.8f, 38.1f, 37.3f, 36.6f, 35.9f, 35.2f, 34.5f, 33.8f, 33.1f, 32.5f, 31.8f, 31.2f},
            {40.0f, 39.2f, 38.5f, 37.7f, 37.0f, 36.2f, 35.5f, 34.8f, 34.1f, 33.5f, 32.8f, 32.2f, 31.5f},
            {40.4f, 39.6f, 38.9f, 38.1f, 37.3f, 36.6f, 35.9f, 35.2f, 34.5f, 33.8f, 33.1f, 32.5f, 31.8f},
            {40.9f, 40.1f, 39.3f, 38.5f, 37.7f, 37.0f, 36.3f, 35.5f, 34.8f, 34.2f, 33.5f, 32.8f, 32.2f},
            {41.3f, 40.5f, 39.7f, 38.9f, 38.1f, 37.4f, 36.6f, 35.9f, 35.2f, 34.5f, 33.8f, 33.2f, 32.5f},
            {41.7f, 40.9f, 40.1f, 39.3f, 38.5f, 37.7f, 37.0f, 36.3f, 35.5f, 34.8f, 34.2f, 33.5f, 32.8f},
            {42.1f, 41.3f, 40.5f, 39.7f, 38.9f, 38.1f, 37.4f, 36.6f, 35.9f, 35.2f, 34.5f, 33.8f, 33.2f},
            {42.5f, 41.7f, 40.9f, 40.1f, 39.3f, 38.5f, 37.7f, 37.0f, 36.3f, 35.5f, 34.8f, 34.2f, 33.5f},
            {42.9f, 42.1f, 41.3f, 40.5f, 39.7f, 38.9f, 38.1f, 37.4f, 36.6f, 35.9f, 35.2f, 34.5f, 33.8f},
            {43.4f, 42.5f, 41.7f, 40.9f, 40.0f, 39.3f, 38.5f, 37.7f, 37.0f, 36.3f, 35.5f, 34.8f, 34.2f},
            {43.8f, 42.9f, 42.1f, 41.3f, 40.4f, 39.6f, 38.9f, 38.1f, 37.3f, 36.6f, 35.9f, 35.2f, 34.5f},
            {44.2f, 43.4f, 42.5f, 41.7f, 40.8f, 40.0f, 39.2f, 38.5f, 37.7f, 37.0f, 36.2f, 35.5f, 34.8f},
            {44.7f, 43.8f, 42.9f, 42.1f, 41.2f, 40.4f, 39.6f, 38.8f, 38.1f, 37.3f, 36.6f, 35.9f, 35.2f},
            {45.1f, 44.2f, 43.3f, 42.5f, 41.6f, 40.8f, 40.0f, 39.2f, 38.4f, 37.7f, 36.9f, 36.2f, 35.5f},
            {45.5f, 44.6f, 43.7f, 42.9f, 42.0f, 41.2f, 40.4f, 39.6f, 38.8f, 38.1f, 37.3f, 36.6f, 35.8f},
            {46.0f, 45.1f, 44.2f, 43.3f, 42.4f, 41.6f, 40.8f, 40.0f, 39.2f, 38.4f, 37.7f, 36.9f, 36.2f},
            {46.4f, 45.5f, 44.6f, 43.7f, 42.8f, 42.0f, 41.2f, 10.4f, 39.6f, 38.8f, 38.0f, 37.3f, 36.5f},
            {46.8f, 45.9f, 45.0f, 44.1f, 43.2f, 42.4f, 41.6f, 40.7f, 39.9f, 39.1f, 38.4f, 37.6f, 36.9f},
            {47.3f, 46.3f, 45.4f, 44.5f, 43.7f, 42.8f, 42.0f, 41.1f, 40.3f, 39.5f, 38.7f, 38.0f, 37.2f},
            {47.7f, 46.8f, 45.9f, 45.0f, 44.1f, 43.2f, 42.3f, 41.5f, 40.7f, 39.9f, 39.1f, 38.3f, 37.6f},
            {48.2f, 47.2f, 46.3f, 45.4f, 44.5f, 43.6f, 42.7f, 41.9f, 41.1f, 40.3f, 39.5f, 38.7f, 37.9f},
            {48.6f, 47.7f, 46.7f, 45.8f, 44.9f, 44.0f, 43.1f, 42.3f, 41.5f, 40.6f, 39.8f, 39.1f, 38.3f},
            {49.1f, 48.1f, 47.1f, 46.2f, 45.3f, 44.4f, 43.5f, 42.7f, 41.8f, 41.0f, 40.2f, 39.4f, 38.6f},
            {49.5f, 48.5f, 47.6f, 46.6f, 45.7f, 44.8f, 43.9f, 43.1f, 42.2f, 41.4f, 40.6f, 39.8f, 39.0f},
            {50.0f, 49.0f, 48.0f, 47.1f, 46.1f, 45.2f, 44.3f, 43.5f, 42.6f, 41.8f, 40.9f, 40.1f, 39.3f},
            {40.4f, 49.4f, 48.5f, 47.5f, 46.6f, 45.6f, 44.7f, 43.9f, 43.0f, 42.2f, 41.3f, 40.5f, 39.7f},
            {40.9f, 49.9f, 48.9f, 47.9f, 47.0f, 46.1f, 45.2f, 44.3f, 43.4f, 42.5f, 41.7f, 40.9f, 40.1f},
            {51.3f, 50.3f, 49.3f, 48.4f, 47.4f, 46.5f, 45.6f, 44.7f, 43.8f, 42.9f, 42.1f, 41.2f, 40.4f},
            {51.8f, 50.8f, 49.8f, 48.8f, 47.8f, 46.9f, 46.0f, 45.1f, 44.2f, 43.3f, 42.5f, 41.6f, 40.8f},
            {52.3f, 51.2f, 50.2f, 49.2f, 48.3f, 47.3f, 46.4f, 45.5f, 44.6f, 43.7f, 42.8f, 42.0f, 41.2f},
            {52.7f, 51.7f, 50.7f, 49.7f, 48.7f, 47.7f, 46.8f, 45.9f, 45.0f, 44.1f, 43.2f, 42.4f, 41.5f},
            {53.2f, 52.2f, 51.1f, 50.1f, 49.1f, 48.2f, 47.2f, 46.3f, 45.4f, 44.5f, 43.6f, 42.7f, 41.9f},
            {53.7f, 52.6f, 51.6f, 50.6f, 49.6f, 48.6f, 47.6f, 46.7f, 45.8f, 44.9f, 44.0f, 43.1f, 42.3f},
            {54.1f, 53.1f, 52.0f, 51.0f, 50.0f, 49.0f, 48.0f, 47.1f, 46.2f, 45.3f, 44.4f, 43.5f, 42.6f},
            {54.6f, 53.5f, 52.5f, 51.5f, 50.4f, 49.4f, 48.5f, 47.5f, 46.6f, 45.7f, 44.8f, 43.9f, 43.0f},
            {55.1f, 54.0f, 52.9f, 51.9f, 50.9f, 49.9f, 48.9f, 47.9f, 47.0f, 46.1f, 45.1f, 44.3f, 43.4f},
            {55.6f, 54.5f, 53.4f, 52.4f, 51.3f, 50.3f, 49.3f, 48.3f, 47.4f, 46.5f, 45.5f, 44.6f, 43.8f},
            {56.1f, 55.0f, 53.9f, 52.8f, 51.8f, 50.7f, 49.7f, 48.8f, 47.8f, 46.9f, 45.9f, 45.0f, 44.1f},
            {56.5f, 55.4f, 54.3f, 53.3f, 52.2f, 51.2f, 50.2f, 49.2f, 48.2f, 47.3f, 46.3f, 45.4f, 44.5f},
            {57.0f, 55.9f, 54.8f, 53.7f, 52.7f, 51.6f, 50.6f, 49.6f, 48.6f, 47.7f, 46.7f, 45.8f, 44.9f},
            {57.5f, 56.4f, 55.3f, 54.2f, 53.1f, 52.1f, 51.0f, 50.0f, 49.0f, 48.1f, 47.1f, 46.2f, 45.3f},
            {58.0f, 56.9f, 55.7f, 54.6f, 53.6f, 52.5f, 51.5f, 50.5f, 49.5f, 48.5f, 47.5f, 46.6f, 45.7f},
            {58.5f, 57.3f, 56.2f, 55.1f, 54.0f, 52.9f, 51.9f, 50.9f, 49.9f, 48.9f, 47.9f, 47.0f, 46.1f},
            {59.0f, 57.8f, 56.7f, 55.6f, 54.5f, 53.4f, 52.3f, 51.3f, 50.3f, 49.3f, 48.3f, 47.4f, 46.4f},
            {59.5f, 58.3f, 57.2f, 56.0f, 54.9f, 53.8f, 52.8f, 51.7f, 50.7f, 49.7f, 48.7f, 47.8f, 46.8f},
            {60.0f, 58.8f, 57.6f, 56.5f, 55.4f, 54.3f, 53.2f, 52.5f, 51.1f, 50.1f, 49.1f, 48.2f, 47.2f},
            {0.0f, 59.3f, 58.1f, 57.0f, 55.8f, 54.7f, 53.7f, 52.6f, 51.6f, 50.5f, 49.5f, 48.6f, 47.6f},
            {0.0f, 59.8f, 58.6f, 57.4f, 56.3f, 55.2f, 54.1f, 53.0f, 52.0f, 51.0f, 50.0f, 49.0f, 48.0f},
            {0.0f, 60.0f, 59.0f, 57.9f, 56.8f, 55.6f, 54.5f, 53.5f, 52.4f, 51.4f, 50.4f, 49.4f, 48.4f},
            {0.0f, 0.0f, 59.6f, 58.4f, 57.2f, 56.1f, 55.0f, 53.9f, 52.8f, 51.8f, 50.8f, 49.8f, 48.8f},
            {0.0f, 0.0f, 60.0f, 58.9f, 57.7f, 56.6f, 55.4f, 54.4f, 53.3f, 52.2f, 51.2f, 50.2f, 49.2f},
            {0.0f, 0.0f, 0.0f, 59.3f, 58.2f, 57.0f, 55.9f, 54.8f, 53.7f, 52.7f, 51.6f, 50.6f, 49.6f},
            {0.0f, 0.0f, 0.0f, 59.8f, 58.6f, 57.5f, 56.3f, 55.2f, 54.1f, 53.1f, 52.0f, 51.0f, 50.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 59.1f, 57.9f, 56.8f, 55.7f, 54.6f, 53.5f, 52.5f, 51.4f, 50.4f},
            {0.0f, 0.0f, 0.0f, 0.0f, 59.6f, 58.4f, 57.3f, 56.1f, 55.0f, 53.9f, 52.9f, 51.8f, 50.8f},
            {0.0f, 0.0f, 0.0f, 0.0f, 60.0f, 58.9f, 57.7f, 56.6f, 55.5f, 54.4f, 53.3f, 52.2f, 51.2f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.3f, 58.2f, 57.0f, 55.9f, 54.8f, 53.7f, 52.7f, 51.6f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.8f, 58.6f, 57.5f, 56.3f, 55.2f, 54.1f, 53.1f, 52.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 60.0f, 59.1f, 57.9f, 56.8f, 55.7f, 54.6f, 53.5f, 52.4f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.6f, 58.4f, 57.2f, 56.1f, 55.0f, 53.9f, 52.9f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 60.0f, 58.8f, 57.7f, 56.6f, 55.4f, 54.3f, 53.3f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.3f, 58.1f, 57.0f, 55.9f, 54.8f, 53.7f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.8f, 58.6f, 57.4f, 56.3f, 55.2f, 54.1f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 60.0f, 59.0f, 57.9f, 56.7f, 55.6f, 54.5f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.5f, 58.3f, 57.2f, 56.0f, 54.9f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 60.0f, 58.8f, 57.6f, 56.5f, 55.4f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.2f, 58.1f, 56.9f, 55.8f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.7f, 58.5f, 57.3f, 56.2f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 60.0f, 58.9f, 57.8f, 56.6f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.4f, 58.2f, 57.1f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.8f, 58.7f, 57.5f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 60.0f, 59.1f, 57.9f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.5f, 58.4f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 60.0f, 58.8f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.2f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 59.7f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
            {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f}};

}
